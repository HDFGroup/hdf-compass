# Based on: http://conda.pydata.org/docs/travis.html

sudo: false

# Travis-CI does not currently support Python and Mac OS X
language: c

os:
  - linux
  - osx

env:
  matrix:
    - PYTHON_VERSION=3.6

cache:
  apt: true
  brew: true

before_install:
  # Set the anaconda environment
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      if [[ "$PYTHON_VERSION" == "2.7" ]]; then
        curl https://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-x86_64.sh -o miniconda.sh;
      else
        curl https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -o miniconda.sh;
      fi
    else
      if [[ "$PYTHON_VERSION" == "2.7" ]]; then
        wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
      else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi
    fi

  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a

  # create and activate a test-environment
  - conda create -q -n test-environment python=$PYTHON_VERSION
  - source activate test-environment

install:
  # libraries from conda-forge
  - conda config --add channels conda-forge
  # python packages
  - conda install -q adios-python h5py lxml numpy matplotlib pydap requests shapely proj4 geos cartopy setuptools gdal
  - pip install --no-deps hyo2.bag
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        pip install wxPython;
    else
        pip install -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-14.04 wxPython;
    fi
  - pip install --no-deps -e .

script:
  - "python -m unittest hdf_compass.array_model.test"
  - "python -m unittest hdf_compass.asc_model.test"
  - "python -m unittest hdf_compass.bag_model.test"
  - "python -m unittest hdf_compass.filesystem_model.test"
  - "python -m unittest hdf_compass.hdf5_model.test"
#  - "python -m unittest hdf_compass.opendap_model.test"
  - "python -m unittest hdf_compass.adios_model.test"

after_script:
  # If tests are successful, create a source distribution.
  - python setup.py sdist
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      python setup.py bdist_wheel;
    fi

addons:
  artifacts:
    debug: true
    paths:
    - ./dist
  apt:
    packages:
    - libmxml-dev
    - libgtk-3-dev
    - libgstreamer0.10-dev
    - libgstreamer-plugins-base0.10-dev
    - gir1.2-gstreamer-0.10
    - gir1.2-gst-plugins-base-0.10
